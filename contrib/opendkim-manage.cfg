[global]

# Old DKIM keys will be protected for some time (Number of days)
delete_delay = 7

# If a DKIM key is older than this amount of days, --add-new will create a new
# DKIM key
expire_after = 30

# The selectorformat is used, if opendkim-manage generates new objects. There
# exist some variables that can be used:
#
# ${randomhex:LENGTH} - example: ${randomhex:8} -> C4D6BAF8
# ${year} - 4 digits year, example 2018
# ${month} - 2 digits month, example 05 for May
# ${day} - 2 digits day - example 27
selectorformat = s${randomhex:8}.${year}-${month}

# If you wnat to add the i= field in DKIM signatures, you can use the LDAP
# attribute DKIMIdentify for this purpose. Set this to true, to add this
# attribute in newly generated objects.
use_dkim_identity = yes

[ldap]

# Set the LDAP URI. The format is: schema://server:port/baseDN??scope
# All other fields in the URI are not used.
uri = ldap://localhost:389/ou=dkim,o=company??sub

# The filter must point to the container object, which carries all the DKIM
# objects for ONE domain. It must provide an attribtute for the DKIM domain
# It is important to set %s, as this will be replaced in searches.
filter = (&(objectClass=domain)(associatedDomain=%s))

# This is the LDAP attribute, which is used for the FQDN of the DKIM domain. As
# this can vary from LDAP setup to setup, you must define it here. The
# attribute normally will be the same as set in the filter.
domain = associatedDomain

# There are a bunch of possible variables:
# use_starttls: true/false - Enable STARTTLS
# cert: Path to a client TLS certificate
# key: Path to a client TLS key
# ca: Path to a CA file, which may verify the server certificate
# reqcert: never/allow/try/demand - How to deal with the server certificate
# ciphers: You can set the cipher suite to use
# bindmethos: simple/sasl - Simple bind or SASL mechanism
# saslmech: DIGEST-MD5/CRAM-MD5/GSSAPI/EXTERNAL - case insensitive
# binddn: Bind DN for simple bind or username for SASL mechs
# bindpw: Bind password for simple bind or SASL credentials

# Exmaple:
use_starttls = yes
ca = /etc/opendkim-manage/cacert.pem
reqcert = demand

binddn = cn=admin,o=company
bindpw = S3cr3t

[dns]
# Optional section, if you plan using dynamic DNS updates with --update-dns

# IP or hostname for the primary DNS server that receives DNS updates.
# Currently only one DNS server is supported.
primary_nameserver = ns.example.test

# Full path to the TSIG key
tsig_key_file = /etc/opendkim-manage/Kexample.+165+50659.private

# Name of the TSIG key
tsig_key_name = example

# TSIG algorithm: hmac_sha256, hmac_sha384 or hmac_sha512
algorithm = hmac_sha512

# DNS TTL for the _domainkey record in seconds
ttl = 3600
